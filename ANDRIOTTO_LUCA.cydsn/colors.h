/* ========================================
 *
 * Andriotto Luca, Assignment #2
 *
 * ========================================
*/

#include "project.h"
#include "RGBLedDriver.h"

// SE CONSIDERO LE ONDE QUADRE DI RIFERIMENTO COME ATTIVAZIONE DEI RISPETTIVI CHANNEL.
// 1. YELLOW ON
#define CMPMODE1R PWM_RED__B_PWM__LESS_THAN
#define CMPMODE1G PWM_GREEN__B_PWM__LESS_THAN
// 2. ALTERNANZA YELLOW/RED
#define CMPMODE2R PWM_RED__B_PWM__LESS_THAN
#define CMPMODE2G PWM_GREEN__B_PWM__LESS_THAN
// 3. ALTERNANZA GREEN/YELLOW
#define CMPMODE3R PWM_RED__B_PWM__GREATER_THAN
#define CMPMODE3G PWM_GREEN__B_PWM__LESS_THAN
// 4. ALTERNANZA RED/GREEN LENTA
#define CMPMODE4R PWM_RED__B_PWM__LESS_THAN_OR_EQUAL
#define CMPMODE4G PWM_GREEN__B_PWM__GREATER_THAN_OR_EQUAL_TO
// 5. ALTERNANZA GREEN/RED VELOCE
#define CMPMODE5R PWM_RED__B_PWM__GREATER_THAN
#define CMPMODE5G PWM_GREEN__B_PWM__LESS_THAN
// 6. YELLOW -- RED -- OFF -- CYCLE
#define CMPMODE6R PWM_RED__B_PWM__LESS_THAN_OR_EQUAL
#define CMPMODE6G PWM_GREEN__B_PWM__LESS_THAN_OR_EQUAL
// 7. GREEN -- OFF -- YELLOW -- RED -- CYCLE
#define CMPMODE7R PWM_RED__B_PWM__GREATER_THAN
#define CMPMODE7G PWM_GREEN__B_PWM__LESS_THAN
// STATO INTERMEDIO, SPEGNIMENTO
#define CMPMODE8R PWM_RED__B_PWM__LESS_THAN_OR_EQUAL
#define CMPMODE8G PWM_GREEN__B_PWM__LESS_THAN_OR_EQUAL

#define SWITCHEDOFF pattern[7]

/*

r           T_OFF (T_ON) VALUE DEL RED CHANNEL NEL TIPO "GREATER_THAN" ("LESS_THAN")
g           T_OFF (T_ON) VALUE DEL GREEN CHANNEL NEL TIPO "GREATER_THAN" ("LESS_THAN")
CMP_MOD_R   COMPARE MODE (RISING/FALLING EDGE INIZIALE) DEL RED CHANNEL
CMP_MOD_L   COMPARE MODE DEL GREEN CHANNEL
PERIOD_R    PERIODO ONDA QUADRA DEL RED CHANNEL
PERIOD_L    PERIODO ONDA QUADRA MODE DEL RED CHANNEL

*/
static Pattern pattern[] =  {
//                         r   g  CMP_MOD_R  CMP_MOD_G  PERIOD_R     PERIOD_G
                        {  0,  0, CMPMODE1R, CMPMODE1G, PWMPERIOD,   PWMPERIOD  },
                        {  0,128, CMPMODE2R, CMPMODE2G, PWMPERIOD,   PWMPERIOD  },
                        {128,  0, CMPMODE3R, CMPMODE3G, PWMPERIOD,   PWMPERIOD  },
                        { 64, 64, CMPMODE4R, CMPMODE4G, PWMPERIOD/2, PWMPERIOD/2},
                        { 32, 32, CMPMODE5R, CMPMODE5G, PWMPERIOD/4, PWMPERIOD/4},
                        { 64,128, CMPMODE6R, CMPMODE6G, PWMPERIOD,   PWMPERIOD  },
                        {128, 64, CMPMODE7R, CMPMODE7G, PWMPERIOD,   PWMPERIOD/2},
                        {255,255, CMPMODE8R, CMPMODE8G, PWMPERIOD,   PWMPERIOD  }
                        };
